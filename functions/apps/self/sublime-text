#!/bin/bash

# Download function for ease of reuse
function install_sublime {
	echo_message info 'Downloading '$NAME'...'
	# Download Debian file that matches system architecture
	case `uname -i` in
		i386|i486|i586|i686)
			curl -O https://download.sublimetext.com/sublime-text_build-${BUILD}_i386.deb
			;;
		x86_64)
			curl -O https://download.sublimetext.com/sublime-text_build-${BUILD}_amd64.deb
			;;
		*)
			whiptail --title "No remote packages available to download." --msgbox "Error." 8 64
			;;
	esac
	# Install package(s)
	echo_message info 'Installing '$NAME'...'
	elevate_privilege "dpkg -i $PACKAGE*.deb"
	elevate_privilege "apt install -fy"
	# Create symbolic link
	echo_message info 'Creating symbolic link...'
	elevate_privilege "ln -sf /opt/sublime_text/sublime_text /usr/bin/sublime"
	# Cleanup and finish
	rm ${PACKAGE}*.deb
	echo_message success "Installation of '$PACKAGE' complete."
}


# Sublime Text 3
function sublime-text {
	# Variables
	NAME="Sublime Text 3"
	PACKAGE=sublime-text
	BUILD=3126
	# Install
	echo_message header 'Begin '$NAME' installation'
	# Check if package is installed
	check_packages $PACKAGE
	exitstatus=$?
	# If package is not installed
	if [ $exitstatus = 1 ]; then
		echo_message info $NAME 'is not installed.'
		echo 'Proceeding'
		install_sublime
		whiptail --title "Finished" --msgbox "Installation $NAME complete." 8 64
		thirdparty_packages
	else
		VERSCHECK=$(dpkg-query -W --showformat='${Version}\n' $PACKAGE)
		if [ "$BUILD" == "$VERSCHECK" ]; then
			# Already installed
			echo_message info $NAME 'already installed.'
			whiptail --title "Finished" --msgbox "$NAME is already installed." 8 64
			thirdparty_packages
		else
			# Update
			echo_message info $NAME '$NAME is already installed, but out-of-date.'
			echo_message info 'Updating '$NAME'...'
			# Install
			install_sublime
			whiptail --title "Finished" --msgbox "Updating of $NAME complete." 8 64
			thirdparty_packages
		fi
	fi
}
